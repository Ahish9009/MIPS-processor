<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompilers" num="299" delta="new" ><arg fmt="%s" index="1">&quot;decode_instr.v&quot; line 44 </arg>Too many digits specified in binary constant
</msg>

<msg type="warning" file="HDLCompilers" num="299" delta="new" ><arg fmt="%s" index="1">&quot;decode_instr.v&quot; line 74 </arg>Too many digits specified in binary constant
</msg>

<msg type="warning" file="HDLCompilers" num="299" delta="new" ><arg fmt="%s" index="1">&quot;decode_instr.v&quot; line 79 </arg>Too many digits specified in binary constant
</msg>

<msg type="warning" file="HDLCompilers" num="299" delta="new" ><arg fmt="%s" index="1">&quot;decode_instr.v&quot; line 84 </arg>Too many digits specified in binary constant
</msg>

<msg type="warning" file="HDLCompilers" num="299" delta="new" ><arg fmt="%s" index="1">&quot;decode_instr.v&quot; line 89 </arg>Too many digits specified in binary constant
</msg>

<msg type="warning" file="HDLCompilers" num="299" delta="new" ><arg fmt="%s" index="1">&quot;decode_instr.v&quot; line 94 </arg>Too many digits specified in binary constant
</msg>

<msg type="warning" file="Xst" num="2725" delta="new" >&quot;<arg fmt="%s" index="1">decode_instr.v</arg>&quot; line <arg fmt="%d" index="2">74</arg>: Size mismatch between case item and case selector.
</msg>

<msg type="warning" file="Xst" num="2725" delta="new" >&quot;<arg fmt="%s" index="1">decode_instr.v</arg>&quot; line <arg fmt="%d" index="2">79</arg>: Size mismatch between case item and case selector.
</msg>

<msg type="warning" file="Xst" num="2725" delta="new" >&quot;<arg fmt="%s" index="1">decode_instr.v</arg>&quot; line <arg fmt="%d" index="2">84</arg>: Size mismatch between case item and case selector.
</msg>

<msg type="warning" file="Xst" num="2725" delta="new" >&quot;<arg fmt="%s" index="1">decode_instr.v</arg>&quot; line <arg fmt="%d" index="2">89</arg>: Size mismatch between case item and case selector.
</msg>

<msg type="warning" file="Xst" num="2725" delta="new" >&quot;<arg fmt="%s" index="1">decode_instr.v</arg>&quot; line <arg fmt="%d" index="2">94</arg>: Size mismatch between case item and case selector.
</msg>

<msg type="info" file="Xst" num="2679" delta="new" >Register &lt;<arg fmt="%s" index="1">reg_dst</arg>&gt; in unit &lt;<arg fmt="%s" index="2">decode_instr</arg>&gt; has a constant value of <arg fmt="%s" index="3">1</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="info" file="Xst" num="2679" delta="new" >Register &lt;<arg fmt="%s" index="1">reg_write</arg>&gt; in unit &lt;<arg fmt="%s" index="2">decode_instr</arg>&gt; has a constant value of <arg fmt="%s" index="3">1</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="info" file="Xst" num="2679" delta="new" >Register &lt;<arg fmt="%s" index="1">mem_read</arg>&gt; in unit &lt;<arg fmt="%s" index="2">decode_instr</arg>&gt; has a constant value of <arg fmt="%s" index="3">0</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="info" file="Xst" num="2679" delta="new" >Register &lt;<arg fmt="%s" index="1">mem_write</arg>&gt; in unit &lt;<arg fmt="%s" index="2">decode_instr</arg>&gt; has a constant value of <arg fmt="%s" index="3">0</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="info" file="Xst" num="2679" delta="new" >Register &lt;<arg fmt="%s" index="1">jump</arg>&gt; in unit &lt;<arg fmt="%s" index="2">decode_instr</arg>&gt; has a constant value of <arg fmt="%s" index="3">0</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="info" file="Xst" num="2679" delta="new" >Register &lt;<arg fmt="%s" index="1">branch</arg>&gt; in unit &lt;<arg fmt="%s" index="2">decode_instr</arg>&gt; has a constant value of <arg fmt="%s" index="3">0</arg> during circuit operation. The register is replaced by logic.
</msg>

<msg type="warning" file="Xst" num="1780" delta="new" >Signal &lt;<arg fmt="%s" index="1">sign_ext</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">shamt</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">rt</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">rs</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">reg_write</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">reg_dst</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">rd</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">mem_write</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">mem_read</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">jump</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">instr_index</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="old" >Signal &lt;<arg fmt="%s" index="1">imm16</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">branch</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1780" delta="new" >Signal &lt;<arg fmt="%s" index="1">alu_src</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">alu_ctr</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

</messages>

